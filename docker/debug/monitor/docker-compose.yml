version: '3.3'

# monitor swarm
# by Abyss
# roger_ren@qq.com
# 部署研究下labels, 部署到固定的主机名/群/组
# 研究下traefik 反向代理
services:
  # 数据展示 grafana 6.0.0
  # 数据源多样
  # 默认用户名admin/admin
  # 需要持久化  - dashboard
  # 需要持久化  - config
  # 需要持久化  - users
  # 研究下 es与日志分析
  # 数据源1:
  # Prometheus
  # type: Prometheus
  # proxy url: http://prometheus:9090
  grafana:
    image: grafana/grafana:6.0.0
    ports:
      - 0.0.0.0:3000:3000
    networks:
      - net_monitor
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    depends_on:
      - prometheus
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 1g

  # 系统监控 cadvisor
  # 管理端口  - 19998
  cadvisor:
    image: google/cadvisor
    hostname: '{{.Node.Hostname}}'
    networks:
      - net_monitor
    ports:
      - 19998:8080
    command: -logtostderr -docker_only
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    environment:
      TZ: Asia/Shanghai
    deploy:
      mode: global
      resources:
        limits:
          memory: 128m

  # 节点监控 node-exporter
  # 管理端口  - 19997
  node-exporter:
    image: prom/node-exporter:v0.17.0
    ports:
      - 19997:9100
    networks:
      - net_monitor
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    environment:
      TZ: Asia/Shanghai
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    deploy:
      mode: global
      resources:
        limits:
          memory: 128m
  
  # 监控系统  prometheus
  prometheus:
    image: prom/prometheus:v2.8.1
    ports:
      - 9090:9090
    networks:
      - net_monitor
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus:/prometheus
    environment:
      TZ: Asia/Shanghai
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - cadvisor
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 256m
  
  # 警报器
  alertmanager:
    image: prom/alertmanager:v0.16.2
    ports:
      - 9093:9093
    networks:
      - net_monitor
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    environment:
      TZ: Asia/Shanghai
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128m

  # 容器管理 portainer
  # 管理端口  - 19000
  # 9000和php冲突
  portainer:
    image: portainer/portainer
    command: -H tcp://tasks.portainner_agent:9001 --tlsskipverify
    ports:
      - 0.0.0.0:19000:9000
    networks:
      - net_monitor
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data
    environment:
      TZ: Asia/Shanghai
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 256m
  
  portainner_agent:
    image: portainer/agent
    environment:
      AGENT_CLUSTER_ADDR: tasks.portainner_agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - net_monitor
    deploy:
      mode: global

  # 容器私有仓库 registry
  # 管理端口  - 5000
  # 如果不是https
  # 需要设置 insecure-registries
  registry:
    image: registry:2
    networks:
      - net_monitor
    ports:
      - 0.0.0.0:5000:5000
    environment:
      TZ: Asia/Shanghai
    volumes:
      - registry:/var/lib/registry
      - ./registry/config.yml:/etc/docker/registry/config.yml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 1g

# 网络研究中
# 覆盖网络会到每个节点
networks:
  net_monitor:
    driver: overlay
    # attachable需要研究一下
    attachable: true

# 本地磁盘
# 持久化方案研究中
# 分布式同步方案
# 容灾备份
volumes:
  grafana:
    driver: local
  portainer:
    driver: local
  prometheus:
    driver: local
  registry:
    driver: local